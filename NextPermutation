class Solution {
    //TC- o(n)
    //SC-o(1)
    public void nextPermutation(int[] nums) {
        
        if(nums == null || nums.length == 0)
            return;
        
        int i = nums.length - 2;
        
        //find the bridge - 2147654321
        //4 is less thn 7 stop
        while(i>= 0 && nums[i] >= nums[i+1]){
            i--;
        }
        
        //check greater permutation of the numbers or not
        //if not find next largest element and swap
        if(i>= 0){
            int j = nums.length -1;
            while(nums[j] <= nums[i]) {
                j--;
            }
            swap(nums,i,j);
        }
        
        //reverse the num for lowest possible or next greator perm. of nums
        //from i+1 to n-1
        reverse(nums,i+1,nums.length-1);
    }
    
    private void swap(int[] nums,int i,int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
    
    private void reverse(int[] nums,int i,int j) {
        while(i<j) {
            swap(nums,i,j);
            i++;j--;
        }
    }
}