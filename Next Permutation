class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        a = -1
        for i in range(len(nums) - 2, -1, -1):
            if nums[i] < nums[i + 1]:
                a = i
                break
        if a == -1:
            nums.reverse()
            return
        b = 0
        for i in range(len(nums) - 1, -1, -1):
            if nums[a] < nums[i]:
                b = i
                break
        nums[a], nums[b] = nums[b], nums[a]
        l, r = a + 1, len(nums) - 1
        while l < r:
            nums[l], nums[r] = nums[r], nums[l]
            l += 1
            r -= 1
            
# Time Complexity: O(n)
# Space Complexity: O(1)
# Successfully implemented on Leetcode
