class Solution {
    public void nextPermutation(int[] nums) {
        if(nums.length==0 || nums==null) return;
        int n=nums.length;
        int i=nums.length-2;int j=nums.length-1;
        while(i>=0 && nums[i]>=nums[i+1] ){
            i--;
            }
        if(i>=0){
        while(nums[i]>=nums[j]){
            j--;
        }
            swap(nums,i,j);
        }
         reverse(nums,i+1,n-1);   
        }
    
    public void reverse(int[] nums, int l,int r){
        while(l<r){
swap( nums,  l, r);
            l++;
            r--;
        }
    }
        private void swap(int[] nums,int l,int r){
            int temp=nums[l];
            nums[l]=nums[r];
            nums[r]=temp;
        }
    }
//TC : O(n)
//SC : O(1)
