// Time Complexity :O(n)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :Yes
//Runtime: 1 ms, faster than 88.42% of Java online submissions for Next Permutation.
//Memory Usage: 43 MB, less than 19.00% of Java online submissions for Next Permutation.
// Any problem you faced while coding this :Already discussed in class


// Your code here along with comments explaining your approach



class Solution {
    public void nextPermutation(int[] nums) {
        int i= nums.length-2;
        while(i>=0 && nums[i+1] <= nums[i]) i--;
        if(i>=0){
            int j= nums.length-1;
            while(nums[j] <=nums[i]){
                j--;
            }
            swap(nums, i,j);   
        }
        reverse(nums, i+1);
  
    }
    private void swap(int[] nums, int i, int j){
        int temp =nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
    private void reverse(int[] nums, int start){
        int i=start, j=nums.length-1;
        while(i<j){
            swap(nums,i,j);
            i++;
            j--;    
        }
    }
}