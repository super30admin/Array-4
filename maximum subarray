// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run in leetcode : Yes
// Any problems faced : No

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int currSum = 0, maxSum = nums[0];
        int n = nums.size();
        for(int i = 0; i < n; i++) {
            currSum = max(currSum + nums[i], nums[i]);  // if the csum is -ve and we encounter a positive value, we can ignore the left part
            maxSum = max(maxSum, currSum);
        }
        return maxSum;
    }
};